{"version":3,"sources":["webpack:///./src/modules/project/Project.jsx","webpack:///./src/modules/project/ProjectDev.jsx","webpack:///./src/modules/project/ProjectHeader.jsx","webpack:///./src/modules/project/ProjectFeatures.jsx","webpack:///./src/modules/project/ProjectInfo.jsx","webpack:///./src/modules/project/ProjectVideo.jsx","webpack:///./src/modules/project/ProjectTech.jsx","webpack:///./src/modules/project/ProjectImages.jsx","webpack:///./src/pages/toyota.jsx"],"names":["ProjectContainer","styled","div","theme","color","bg","hoverTransition","InnerContainer","media","down","md","Project","project","title","subtitle","background","description","hero","images","githubLink","hostedLink","videos","devDesc","features","year","to","text","outline","direction","backbtn","image","type","length","video","StyledProjectDev","section","ProjectDev","map","paragraph","key","StyledHeader","ul","ColorSection","imgBg","StyledText","sm","ProjectHeader","src","alt","StyledProjectInfo","Grid","Buttons","xs","ProjectInfo","href","VideoContainer","ProjectVideo","style","toyota","projects","PageContent","pageTitle"],"mappings":"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","file":"component---src-pages-toyota-jsx-eab8087367807add469c.js","sourcesContent":["import { ProjectDev, ProjectInfo, ProjectHeader, ProjectVideo, ProjectImages } from './'\nimport { Button, Container, Text } from '@src/ui/components'\nimport { media } from '@src/utils'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst ProjectContainer = styled.div`\n  background: ${({ theme }) => theme.color.bg};\n  transition: ${({ theme }) => theme.hoverTransition};\n`;\n\nconst InnerContainer = styled.div`\n  width: 100%;\n  max-width: 1100px;\n  margin: 10px auto;\n  ${media.down.md} {\n    width: 90%;\n  }\n`;\n\n\n\nexport const Project = ({ project }) => {\n  const {\n    title,\n    subtitle,\n    background,\n    description,\n    hero,\n    images,\n    githubLink,\n    hostedLink,\n    videos,\n    devDesc,\n    features,\n    year,\n  } = project;\n\n\n  // useEffect(() => window.scrollTo(0,0));\n\n  return (\n    <ProjectContainer>\n      <Button to='/mywork' text='<< Back' outline='false' direction='left' backbtn='true'/>\n      <ProjectHeader background={background} title={title} subtitle={subtitle} image={hero} year={year}/>\n      <Container>\n        <InnerContainer>\n          <ProjectInfo\n            title={title}\n            subtitle={subtitle}\n            description={description}\n            githubLink={githubLink}\n            hostedLink={hostedLink}\n          />\n          <Text type='heading'>Sample Images</Text>\n          {images.length > 0 ?\n            <ProjectImages images={images} /> :\n            <Text type='subheading'>Coming Soon...</Text>\n          }\n\n          {videos.length > 0 &&\n            <ProjectVideo video={videos[0]} title={title} />\n          }\n          <ProjectDev devDesc={devDesc} features={features} />\n        </InnerContainer>\n      </Container>\n      <Button to='/mywork' text='<< Back' outline='false' direction='left' backbtn='true'/>\n    </ProjectContainer>\n  )\n};\n","import { ProjectFeatures, ProjectTech } from '@src/modules/project'\nimport { Text } from '@src/ui/components'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledProjectDev = styled.section`\n  margin: 10px auto 60px;\n`;\n\nexport const ProjectDev = ({ devDesc, features }) => (\n  <StyledProjectDev>\n    <Text type='heading'>Introspective</Text>\n    {devDesc.map((paragraph) => (\n      <Text key={`DevDesc-${paragraph}`}>{paragraph}</Text>\n    ))}\n  </StyledProjectDev>\n);\n","import {Text} from '@src/ui/components'\nimport {media} from '@src/utils'\nimport React from 'react'\nimport Fade from 'react-reveal/Fade'\nimport styled from 'styled-components'\n\nconst StyledHeader = styled.section`\n  width: 100%;\n  //padding-top: 10vh;\n  position: relative;\n`;\nconst ColorSection = styled.div`\n  margin-top: 20px;\n  width: 100%;\n  height: auto;\n  background: ${({theme}) => theme.color.imgBg};\n  display: grid;\n  place-items: center center;\n  position: relative;\n  & img {\n    height: auto;\n    width: 100%;\n    max-width: 1280px;\n  }\n\n`;\n\nconst StyledText = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-flow: nowrap;\n  width: 100%;\n  & h3 {\n    width: 100%;\n    text-align: center;\n    padding: 10px 0 0 20px;\n    display: inline-block;\n    line-height: 1.1;\n    margin: 0 10px 0 0;\n    ${media.down.sm} {\n      font-size: 1.2em;\n    }\n  }\n`;\n\nexport const ProjectHeader = ({background, title, subtitle, image, year}) => (\n  <StyledHeader>\n    <StyledText>\n      <Text type='heading'>{title} :: {subtitle} :: {year}</Text>\n    </StyledText>\n    <ColorSection>\n      <img src={image} alt={title} />\n    </ColorSection>\n  </StyledHeader>\n);\n","import { Text } from '@src/ui/components'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledProjectFeatures = styled.div`\n  margin: 50px auto;\n`;\n\nconst FeatureList = styled.ul`\n  list-style-type: square;\n  margin-top: 1.5em;\n`;\n\nexport const ProjectFeatures = ({ features }) => (\n  <StyledProjectFeatures>\n    <Text type='subheading'>Key Features</Text>\n    <FeatureList>\n      {features.map((feature) => (\n        <Text type='list-item' key={`feat-${feature}`}>\n          {feature}\n        </Text>\n      ))}\n    </FeatureList>\n  </StyledProjectFeatures>\n);\n","import { Button, Text } from '@src/ui/components'\nimport { media } from '@src/utils'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledProjectInfo = styled.section`\n  width: 100%;\n  margin: 10px auto 0;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 100px;\n  width: 100%;\n  grid-template-columns: 2fr 1fr;\n\n  ${ media.down.md } {\n    grid-template-columns: 1fr;\n    grid-gap: 20px;\n  }\n`;\n\nconst Buttons = styled.div`\n  display: grid;\n  grid-gap: 15px;\n  align-self: start;\n  justify-self: end;\n\n  ${media.down.md} {\n    grid-template-columns: 1fr 1fr;\n    justify-self: start;\n  }\n  ${media.down.sm} {\n    justify-self: stretch;\n  }\n  ${media.down.xs} {\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  }\n`;\n\nconst StyledTitle = styled.div`\n  & h3, & h4 {\n    text-align: left;\n    color: ${ ({theme}) => theme.color.imgBg };\n  }\n`;\n\nexport const ProjectInfo = ({ title, subtitle, githubLink, hostedLink }) => (\n  <StyledProjectInfo>\n    <Grid>\n      {/*<StyledTitle>\n        <Text type='heading'>{title}</Text>\n        <Text type='subheading'>{subtitle}</Text>\n      </StyledTitle>*/}\n      <Buttons>\n        { hostedLink.length > 0 &&\n          <Button text='See Website' href={hostedLink}/>\n        }\n        { githubLink.length > 0 &&\n        <Button outline text='View on GitHub' href={githubLink} />\n        }\n      </Buttons>\n    </Grid>\n  </StyledProjectInfo>\n);\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Text} from '@src/ui/components'\n\nconst VideoContainer = styled.section`\n  width: 100%;\n  display: grid;\n  place-items: center center;\n  margin: 60px auto 0;\n\n  & img {\n    max-height: 82vh;\n  }\n`;\n\nexport const ProjectVideo = ({ video, title }) => (\n  <VideoContainer>\n    <Text style='Subheading'>Demo Video:</Text>\n    <img src={video} alt={title} />\n  </VideoContainer>\n);\n","import { TechGrid, Text } from '@src/ui/components'\nimport { media } from '@src/utils'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledProjectTech = styled.div`\n  margin: 50px auto 0;\n  ${media.down.md} {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const ProjectTech = ({ tech }) => (\n  <StyledProjectTech>\n    <Text type='subheading'>Tools Used</Text>\n    <Text>\n      Here are some of the key pieces of technology used in building and designing this project.\n    </Text>\n    <TechGrid tech={tech} page='project' />\n  </StyledProjectTech>\n);\n","import { Text } from '@src/ui/components'\nimport { media } from '@src/utils'\nimport React from 'react'\nimport Fade from 'react-reveal/Fade'\nimport styled from 'styled-components'\n\nconst StyledHeader = styled.section`\n  width: 100%;\n  padding-top: 1.5em;\n`;\nconst ColorSection = styled.div`\n  margin-top: 10vh;\n  width: 100%;\n  height: 40vh;\n  display: grid;\n  place-items: center center;\n\n  & img {\n    height: 80%;\n    width: auto;\n  }\n\n  ${media.down.md} {\n    height: 35vh;\n  }\n  ${media.down.sm} {\n    height: 25vh;\n  }\n  ${media.down.xs} {\n    height: 30vh;\n    & img {\n      height: auto;\n      width: 80%;\n    }\n  }\n`;\n\nconst ProjectImages = ({ title, images }) => (\n  <StyledHeader>\n    <ColorSection >\n      <Text style='Subheading'>Sample Images:</Text>\n      <Fade bottom>\n        {\n          images.map(image => <img src={image} alt={title} key={title} />)\n        }\n      </Fade>\n    </ColorSection>\n  </StyledHeader>\n);\nexport default ProjectImages;\n","import { projects, projectTech } from '@src/data'\nimport { Project } from '@src/modules/project'\nimport { Layout } from '@src/ui/layout'\nimport React from 'react'\n\nconst {toyota} = projects;\n\nconst PageContent = () => (\n  <Layout pageTitle={toyota.title}>\n    <Project project={toyota} />\n  </Layout>\n);\nexport default PageContent;\n\n"],"sourceRoot":""}