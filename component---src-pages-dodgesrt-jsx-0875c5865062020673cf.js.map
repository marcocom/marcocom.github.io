{"version":3,"sources":["webpack:///./src/pages/dodgesrt.jsx","webpack:///./src/modules/project/Project.jsx","webpack:///./src/modules/project/ProjectDev.jsx","webpack:///./src/modules/project/ProjectFeatures.jsx","webpack:///./src/modules/project/ProjectHeader.jsx","webpack:///./src/modules/project/ProjectInfo.jsx","webpack:///./src/modules/project/ProjectVideo.jsx","webpack:///./src/modules/project/ProjectTech.jsx","webpack:///./src/modules/project/ProjectImages.jsx"],"names":["dodgesrt","projects","PageContent","pageTitle","title","project","ProjectContainer","styled","div","theme","color","bg","hoverTransition","InnerContainer","media","down","xs","Project","subtitle","background","description","hero","images","githubLink","hostedLink","videos","devDesc","features","useEffect","window","scrollTo","to","text","direction","image","type","length","video","StyledProjectDev","section","ProjectDev","map","paragraph","ul","StyledHeader","ColorSection","imgBg","md","sm","StyledText","ProjectHeader","bottom","src","alt","StyledProjectInfo","Grid","Buttons","ProjectInfo","href","outline","VideoContainer","ProjectVideo","style"],"mappings":"uJAKQA,G,UAAaC,IAAbD,UAOOE,UALK,kBAClB,cAAC,IAAD,CAAQC,UAAWH,EAASI,MAA5B,SACE,cAAC,IAAD,CAASC,QAASL,Q,4QCHhBM,EAAmBC,IAAOC,IAAV,gFAAGD,CAAH,oCACN,qBAAGE,MAAkBC,MAAMC,MAC3B,qBAAGF,MAAkBG,mBAG/BC,EAAiBN,IAAOC,IAAV,8EAAGD,CAAH,mEAKhBO,IAAMC,KAAKC,IAOFC,EAAU,SAAC,GAAiB,IAAfZ,EAAc,EAAdA,QAEtBD,EAWEC,EAXFD,MACAc,EAUEb,EAVFa,SACAC,EASEd,EATFc,WACAC,EAQEf,EARFe,YACAC,EAOEhB,EAPFgB,KACAC,EAMEjB,EANFiB,OACAC,EAKElB,EALFkB,WACAC,EAIEnB,EAJFmB,WACAC,EAGEpB,EAHFoB,OACAC,EAEErB,EAFFqB,QACAC,EACEtB,EADFsB,SAMF,OAFAC,qBAAU,kBAAMC,OAAOC,SAAS,EAAE,MAGhC,eAACxB,EAAD,WACE,cAAC,IAAD,CAAQyB,GAAG,IAAIC,KAAK,UAAUC,UAAU,OACxC,cAAC,EAAD,CAAed,WAAYA,EAAYf,MAAOA,EAAOc,SAAUA,EAAUgB,MAAOb,IAChF,cAAC,IAAD,UACE,eAACR,EAAD,WACE,cAAC,EAAD,CACET,MAAOA,EACPc,SAAUA,EACVE,YAAaA,EACbG,WAAYA,EACZC,WAAYA,IAEd,cAAC,IAAD,CAAMW,KAAK,UAAX,2BACCb,EAAOc,OAAS,EACf,mBAAC,EAAD,CAAed,OAAQA,IACvB,cAAC,IAAD,CAAMa,KAAK,aAAX,4BAGDV,EAAOW,OAAS,GACf,cAAC,EAAD,CAAcC,MAAOZ,EAAO,GAAIrB,MAAOA,IAEzC,cAAC,EAAD,CAAYsB,QAASA,EAASC,SAAUA,SAG5C,cAAC,IAAD,CAAQI,GAAG,IAAIC,KAAK,UAAUC,UAAU,WC7DxCK,EAAmB/B,IAAOgC,QAAV,+EAAGhC,CAAH,4BAITiC,EAAa,SAAC,GAAD,IAAGd,EAAH,EAAGA,QAAH,EAAYC,SAAZ,OACxB,eAACW,EAAD,WACE,cAAC,IAAD,CAAMH,KAAK,UAAX,2BACCT,EAAQe,KAAI,SAACC,GAAD,OACX,cAAC,IAAD,UAAoCA,GAApC,WAAsBA,U,GCTEnC,IAAOC,IAAV,4FAAGD,CAAH,uBAIPA,IAAOoC,GAAV,kFAAGpC,CAAH,8C,oBCFXqC,EAAerC,IAAOgC,QAAV,8EAAGhC,CAAH,mCAKZsC,EAAetC,IAAOC,IAAV,8EAAGD,CAAH,kOAIF,qBAAEE,MAAiBC,MAAMoC,QASrChC,IAAMC,KAAKgC,GAGXjC,IAAMC,KAAKiC,GAGXlC,IAAMC,KAAKC,IASTiC,EAAa1C,IAAOC,IAAV,4EAAGD,CAAH,8JAcH2C,EAAgB,SAAC,GAAD,EAAE/B,WAAF,IAAcf,EAAd,EAAcA,MAAOc,EAArB,EAAqBA,SAAUgB,EAA/B,EAA+BA,MAA/B,OAC3B,eAACU,EAAD,eAAe,cAACK,EAAD,UACb,cAAC,IAAD,CAAMd,KAAK,UAAX,SAAsBjB,MAEtB,cAAC2B,EAAD,UACE,cAAC,IAAD,CAAMM,QAAM,EAAZ,SACE,qBAAKC,IAAKlB,EAAOmB,IAAKjD,YCtDxBkD,EAAoB/C,IAAOgC,QAAV,qFAAGhC,CAAH,oCAKjBgD,EAAOhD,IAAOC,IAAV,wEAAGD,CAAH,uHAMNO,IAAMC,KAAKgC,IAMTS,EAAUjD,IAAOC,IAAV,2EAAGD,CAAH,+LAMTO,IAAMC,KAAKgC,GAIXjC,IAAMC,KAAKiC,GAGXlC,IAAMC,KAAKC,IAaFyC,GAPOlD,IAAOC,IAAV,+EAAGD,CAAH,2CAGJ,qBAAEE,MAAiBC,MAAMoC,SAIX,SAAC,GAAD,EAAG1C,MAAH,EAAUc,SAAV,IAAoBK,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,WAAhC,OACzB,cAAC8B,EAAD,UACE,cAACC,EAAD,UAKE,eAACC,EAAD,WACIhC,EAAWY,OAAS,GACpB,cAAC,IAAD,CAAQJ,KAAK,cAAc0B,KAAMlC,IAEjCD,EAAWa,OAAS,GACtB,cAAC,IAAD,CAAQuB,SAAO,EAAC3B,KAAK,iBAAiB0B,KAAMnC,aCxD9CqC,GCCoBrD,IAAOC,IAAV,qFAAGD,CAAH,gDAEnBO,IAAMC,KAAKgC,IDHQxC,IAAOgC,QAAV,8EAAGhC,CAAH,mGAWPsD,EAAe,SAAC,GAAD,IAAGxB,EAAH,EAAGA,MAAOjC,EAAV,EAAUA,MAAV,OAC1B,eAACwD,EAAD,WACE,cAAC,IAAD,CAAME,MAAM,aAAZ,yBACA,qBAAKV,IAAKf,EAAOgB,IAAKjD,QEZLG,IAAOgC,QAAV,8EAAGhC,CAAH,mCAIGA,IAAOC,IAAV,8EAAGD,CAAH,gMAYdO,IAAMC,KAAKgC,GAGXjC,IAAMC,KAAKiC,GAGXlC,IAAMC,KAAKC","file":"component---src-pages-dodgesrt-jsx-0875c5865062020673cf.js","sourcesContent":["import { projects, projectTech } from '@src/data'\nimport { Project } from '@src/modules/project'\nimport { Layout } from '@src/ui/layout'\nimport React from 'react'\n\nconst { dodgesrt } = projects;\n\nconst PageContent = () => (\n  <Layout pageTitle={dodgesrt.title}>\n    <Project project={dodgesrt} />\n  </Layout>\n);\nexport default PageContent;\n\n","import { ProjectDev, ProjectInfo, ProjectHeader, ProjectVideo, ProjectImages } from '@src/modules/project'\nimport { Button, Container, Text } from '@src/ui/components'\nimport { media } from '@src/utils'\nimport {React, useEffect} from 'react'\nimport styled from 'styled-components'\n\nconst ProjectContainer = styled.div`\n  background: ${({ theme }) => theme.color.bg};\n  transition: ${({ theme }) => theme.hoverTransition};\n`;\n\nconst InnerContainer = styled.div`\n  width: 100%;\n  max-width: 1100px;\n  margin: 0 auto;\n\n  ${media.down.xs} {\n    padding: 0 20px;\n  }\n`;\n\n\n\nexport const Project = ({ project }) => {\n  const {\n    title,\n    subtitle,\n    background,\n    description,\n    hero,\n    images,\n    githubLink,\n    hostedLink,\n    videos,\n    devDesc,\n    features,\n  } = project;\n\n\n  useEffect(() => window.scrollTo(0,0));\n\n  return (\n    <ProjectContainer>\n      <Button to='/' text='<< Back' direction='up'/>\n      <ProjectHeader background={background} title={title} subtitle={subtitle} image={hero} />\n      <Container>\n        <InnerContainer>\n          <ProjectInfo\n            title={title}\n            subtitle={subtitle}\n            description={description}\n            githubLink={githubLink}\n            hostedLink={hostedLink}\n          />\n          <Text type='heading'>Sample Images</Text>\n          {images.length > 0 ?\n            <ProjectImages images={images} /> :\n            <Text type='subheading'>Coming Soon...</Text>\n          }\n\n          {videos.length > 0 &&\n            <ProjectVideo video={videos[0]} title={title} />\n          }\n          <ProjectDev devDesc={devDesc} features={features} />\n        </InnerContainer>\n      </Container>\n      <Button to='/' text='<< Back' direction='up'/>\n    </ProjectContainer>\n  )\n};\n","import { ProjectFeatures, ProjectTech } from '@src/modules/project'\nimport { Text } from '@src/ui/components'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledProjectDev = styled.section`\n  margin: 10px auto 60px;\n`;\n\nexport const ProjectDev = ({ devDesc, features }) => (\n  <StyledProjectDev>\n    <Text type='heading'>Introspective</Text>\n    {devDesc.map((paragraph) => (\n      <Text key={`DevDesc-${paragraph}`}>{paragraph}</Text>\n    ))}\n  </StyledProjectDev>\n);\n","import { Text } from '@src/ui/components'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledProjectFeatures = styled.div`\n  margin: 50px auto;\n`;\n\nconst FeatureList = styled.ul`\n  list-style-type: square;\n  margin-top: 1.5em;\n`;\n\nexport const ProjectFeatures = ({ features }) => (\n  <StyledProjectFeatures>\n    <Text type='subheading'>Key Features</Text>\n    <FeatureList>\n      {features.map((feature) => (\n        <Text type='list-item' key={`feat-${feature}`}>\n          {feature}\n        </Text>\n      ))}\n    </FeatureList>\n  </StyledProjectFeatures>\n);\n","import {Text} from '@src/ui/components'\nimport {media} from '@src/utils'\nimport React from 'react'\nimport Fade from 'react-reveal/Fade'\nimport styled from 'styled-components'\n\nconst StyledHeader = styled.section`\n  width: 100%;\n  //padding-top: 10vh;\n  position: relative;\n`;\nconst ColorSection = styled.div`\n  margin-top: 20px;\n  width: 100%;\n  height: 40vh;\n  background: ${({theme}) => theme.color.imgBg};\n  display: grid;\n  place-items: center center;\n  position: relative;\n  & img {\n    height: 80%;\n    width: auto;\n  }\n\n  ${media.down.md} {\n    height: 35vh;\n  }\n  ${media.down.sm} {\n    height: 25vh;\n  }\n  ${media.down.xs} {\n    height: 30vh;\n    & img {\n      height: auto;\n      width: 80%;\n    }\n  }\n`;\n\nconst StyledText = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-flow: nowrap;\n  width: 100%;\n  & h3 {\n    width: 100%;\n    padding: 10px 0 0 20px;\n    display: inline-block;\n    line-height: 1;\n    margin: 0 10px 0 0;\n  }\n`;\n\nexport const ProjectHeader = ({background, title, subtitle, image}) => (\n  <StyledHeader> <StyledText>\n    <Text type='heading'>{subtitle}</Text>\n  </StyledText>\n    <ColorSection>\n      <Fade bottom>\n        <img src={image} alt={title} />\n      </Fade>\n    </ColorSection>\n  </StyledHeader>\n);\n","import { Button, Text } from '@src/ui/components'\nimport { media } from '@src/utils'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledProjectInfo = styled.section`\n  width: 100%;\n  margin: 10px auto 0;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 100px;\n  width: 100%;\n  grid-template-columns: 2fr 1fr;\n\n  ${media.down.md} {\n    grid-template-columns: 1fr;\n    grid-gap: 20px;\n  }\n`;\n\nconst Buttons = styled.div`\n  display: grid;\n  grid-gap: 15px;\n  align-self: start;\n  justify-self: end;\n\n  ${media.down.md} {\n    grid-template-columns: 1fr 1fr;\n    justify-self: start;\n  }\n  ${media.down.sm} {\n    justify-self: stretch;\n  }\n  ${media.down.xs} {\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  }\n`;\n\nconst StyledTitle = styled.div`\n  & h3, & h4 {\n    text-align: left;\n    color: ${({theme}) => theme.color.imgBg};\n  }\n`;\n\nexport const ProjectInfo = ({ title, subtitle, githubLink, hostedLink }) => (\n  <StyledProjectInfo>\n    <Grid>\n      {/*<StyledTitle>\n        <Text type='heading'>{title}</Text>\n        <Text type='subheading'>{subtitle}</Text>\n      </StyledTitle>*/}\n      <Buttons>\n        { hostedLink.length > 0 &&\n          <Button text='See Website' href={hostedLink}/>\n        }\n        { githubLink.length > 0 &&\n        <Button outline text='View on GitHub' href={githubLink} />\n        }\n      </Buttons>\n    </Grid>\n  </StyledProjectInfo>\n);\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Text} from '@src/ui/components'\n\nconst VideoContainer = styled.section`\n  width: 100%;\n  display: grid;\n  place-items: center center;\n  margin: 60px auto 0;\n\n  & img {\n    max-height: 82vh;\n  }\n`;\n\nexport const ProjectVideo = ({ video, title }) => (\n  <VideoContainer>\n    <Text style='Subheading'>Demo Video:</Text>\n    <img src={video} alt={title} />\n  </VideoContainer>\n);\n","import { TechGrid, Text } from '@src/ui/components'\nimport { media } from '@src/utils'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledProjectTech = styled.div`\n  margin: 50px auto 0;\n  ${media.down.md} {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const ProjectTech = ({ tech }) => (\n  <StyledProjectTech>\n    <Text type='subheading'>Tools Used</Text>\n    <Text>\n      Here are some of the key pieces of technology used in building and designing this project.\n    </Text>\n    <TechGrid tech={tech} page='project' />\n  </StyledProjectTech>\n);\n","import { Text } from '@src/ui/components'\nimport { media } from '@src/utils'\nimport React from 'react'\nimport Fade from 'react-reveal/Fade'\nimport styled from 'styled-components'\n\nconst StyledHeader = styled.section`\n  width: 100%;\n  padding-top: 1.5em;\n`;\nconst ColorSection = styled.div`\n  margin-top: 10vh;\n  width: 100%;\n  height: 40vh;\n  display: grid;\n  place-items: center center;\n\n  & img {\n    height: 80%;\n    width: auto;\n  }\n\n  ${media.down.md} {\n    height: 35vh;\n  }\n  ${media.down.sm} {\n    height: 25vh;\n  }\n  ${media.down.xs} {\n    height: 30vh;\n    & img {\n      height: auto;\n      width: 80%;\n    }\n  }\n`;\n\nconst ProjectImages = ({ title, images }) => (\n  <StyledHeader>\n    <ColorSection >\n      <Text style='Subheading'>Sample Images:</Text>\n      <Fade bottom>\n        {\n          images.map(image => <img src={image} alt={title} key={title} />)\n        }\n      </Fade>\n    </ColorSection>\n  </StyledHeader>\n);\nexport default ProjectImages;\n"],"sourceRoot":""}